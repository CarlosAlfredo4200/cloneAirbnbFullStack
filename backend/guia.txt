Instalar:
npm init --y
npm i express --save
npm i dotenv
npm i multer // gestionar carga de archivos mp3
npm i cors
npm i bcrypt
npm i nodemon
npm i mongoose

Scaffold MVC

NOTA: corregir nueva coneccion mongo : 
Tu código parece estar casi correcto, 
pero todavía estás utilizando una función de devolución 
de llamada en mongoose.connect. Para corregirlo y hacerlo 
consistente con la sintaxis actualizada de Mongoose,
debes utilizar promesas o async/await para manejar
la conexión. Aquí tienes el código corregido:

----------------------------------------------
import mongoose from "mongoose";

const dbConnect = async () => {
  try {
    const DB_URI = process.env.MONGODB_URI;
    await mongoose.connect(DB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log('**** Conexión exitosa a MongoDB ****');
  } catch (err) {
    console.error('**** Falla en la conexión a MongoDB ****', err);
  }
};

export default dbConnect;


----------------- cambio en el index ----------------
Cambios realizados:

Importamos fs/promises en lugar de fs para utilizar operaciones asíncronas de archivos. Usamos await para esperar a que readdir se complete.
Obtenemos la ruta del módulo actual utilizando import.meta.url. Esto reemplaza la necesidad de usar __dirname, que no está disponible en módulos ES6.
Añadimos un bloque try...catch para manejar errores que puedan ocurrir al leer el directorio.
Asegúrate de guardar este archivo con la extensión ".mjs" y que tu entorno de ejecución sea compatible con módulos ES6.
 
